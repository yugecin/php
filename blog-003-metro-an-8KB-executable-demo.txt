.pushmode config
{"metro", an 8KB executable demo} ||| title
{20 July 2022} ||| published
{26 July 2022} ||| modified
.popmode config

{still image of the demo, showing a subway tunnel}                               ||| img src=blog003/thumb.png title="thumbnail"

This post is pretty bare-bones. I'll hopefully expand it at some point.

.pushmode section

{Links} ||| h id=Links

.pushmode ul
- {GitHub: yugecin/metro}                                                        ||| a class=ext href=https://github.com/yugecin/metro
- {pouÃ«t: metro by yugecin}                                                      ||| a class=ext href=https://www.pouet.net/prod.php?which=91825
- {Demozoo: Metro by yugecin}                                                    ||| a class=ext href=https://demozoo.org/productions/310456/
- {download: scene.org file archive :: metro.zip}                                ||| a class=ext href=https://files.scene.org/view/parties/2022/blackvalley22/combined_intro/metro.zip
- {YouTube: "metro", an 8KB executable demo (Black Valley 2022)}                 ||| a class=ext href=https://youtu.be/AtcNkrkNmZQ
- {YouTube: "metro", live at Black Valley 2022}                                  ||| a class=ext href=https://youtu.be/d0Voud49TSo
.popmode ul

.popmode section
.pushmode section

{Index} ||| h id=Index

{} ||| index

.popmode section
.pushmode section

{What} ||| h id=What

This is a 6.552 bytes Windows executable demo, made by me, released at the Black
Valley 2022 {demoparty}.                                                         ||| a class=ext href=https://en.wikipedia.org/wiki/Demoscene

.popmode section
.pushmode section

{Tooling} ||| h id=tooling

After prototyping the rails on {Shadertoy}, I wanted to make some tool to edit   ||| a class=ext href=https://www.shadertoy.com/
the shader, mainly for easily controlling variables and because I wanted to use
vim bindings because I'm very used to vim and I feel less efficient without it.

I made this in Java, simply because I know Java pretty good so I can get going
quickly, and I have worked with LWJGL before (a lib that allows using OpenGL).
It has a canvas with OpenGL contex, some sliders to tinker with some values that
are passed to the shader, and uses a file watcher so the shader file gets read
and recompiled whenever that file is changed. I also added mouse and
zqsd/shift/ctrl input in order to move around the scene. (zqsd because I use
azerty keyboard layout)

.pushmode plain
<video controls style="max-width:100%">
	<source src="blog003/tool.mp4" type="video/mp4">
</video>
.popmode plain

Then I also added a camera path editor thing, because I thought I wouldn't be
able to come up with good camera paths by just making some cool mathematical
equation, so this one allowed me to use bezier curves for xyz and rotation
values.

.pushmode plain
<video controls style="max-width:100%">
	<source src="blog003/camera.mp4" type="video/mp4">
</video>
.popmode plain

.popmode section
.pushmode section

{Graffiti} ||| h id=graffiti

For making the graffiti, I also made a quick tool to position some cubic beziers
and then output the coordinates of the (control) points,
to paste them into the shader.

{{screenshot of a program that draws beziers with controllable control points}} ||| a href=blog003/graf.png,img raw src=blog003/graf.png title="graffiti tooling" style="max-width:100%"

For every frame, the position in the chain of beziers for the current time
(minus and plus some small value) is calculated and a circle is drawn at that
position (multiple circles actually, in order to also draw the outline of the
text). Then that is saved to a texture, to be used to draw it on the wall and
as "base" image for the next graffiti frame. The texture is cleared while the
camera is transitioning from the previous to the next graffiti spots.

.popmode section
.pushmode section

{WIP content} ||| h id=wip

{first prototype of the railway tunnel, with simple lighting}                    ||| imgcaptioned src=blog003/lighting.gif title="first version of the tunnel" alt="first prototype of the railway tunnel, with simple lighting"

{messing around with the marched lighting}                                       ||| imgcaptioned src=blog003/light2.gif title="messing around with the marched lighting" alt="using a slider to control which lighting system to use"

.pushmode plain
<p class="img">
<video controls style="max-width:100%">
	<source src="blog003/awt.mp4" type="video/mp4">
</video>
<br/>
Artifacts when using the Java AWT ScrollPane in the tool.
</p>
.popmode plain

.pushmode plain
<p class="img">
<video controls style="max-width:100%">
	<source src="blog003/swing.mp4" type="video/mp4">
</video>
<br/>
Artifacts when using the Java Swing JScrollPane in the tool.
</p>
.popmode plain

.pushmode plain
<p class="img">
<video controls style="max-width:100%">
	<source src="blog003/mov.mp4" type="video/mp4">
</video>
<br/>
Using the trackbars to control the camera. Initial support beam.
</p>
.popmode plain

.pushmode plain
<p class="img">
<video controls style="max-width:100%">
	<source src="blog003/mov2.mp4" type="video/mp4">
</video>
<br/>
Using mouse+keyboard to control the camera. Early version of support beams.
</p>
.popmode plain

.popmode section
